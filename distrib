#!/bin/bash

cdir=$(dirname "$0")
. "$cdir"/common
cdir=$(normalpath "$cdir")

pn=$0
prog=$(basename "$pn")
comline="$cdir/$prog $*"
echo $comline

# parameters
datalist=
ijobs="100%"
mem=7900
while [ $# -gt 0 ]
do
    case "$1" in
	-script)            script="$2"; shift;;
	-datalist)        datalist="$2"; shift;;
	-jobs)               ijobs="$2"; shift;;
	-level)             ilevel="$2"; shift;;
    --) shift; break;;
    -*)
        echo >&2 \
	         "Usage: $0 -script script.sh -datalist list.sh -jobs max-parallel -level level"
    exit 1;;
*)  break;;# terminate while loop
    esac
    shift
done

jobs=$ijobs
[[ $jobs =~ ^[0-9]+%?$ ]] || fatal "Non-numeric setting for -jobs"

[[ -n "$PINCRAM_ARCH" ]] && arch="$PINCRAM_ARCH"
[[ $arch =~ pbs|bash|ge ]] || fatal "Architecture not set or not implemented (\$arch=$arch)"

level=$ilevel
[[ $level =~ ^[0-9]+%?$ ]] || fatal "Non-numeric setting for -level. level = $level ilevel = $ilevel"

[[ -e $datalist ]] || fatal "Data list $datalist not found"
datalist=$(normalpath $datalist)

export LEVEL=$level 
case $arch in
    ge)
	fatal "$arch not implemented"
	;;
    pbs)
	cd "$PINCRAM_WORKDIR"
	atlasn=$(cat $datalist | wc -l)
	if [[ -n $PINCRAM_CHUNKSIZE ]] 
	then
	    chunkn=$PINCRAM_CHUNKSIZE
	else
	    chunkn=$[$[$level-3]**2]
	fi
	levelplus=$[$level + 3]
	tsec=$[$levelplus ** 5 * $atlasn]
	chfactor=$chunkn ; [[ $chunkn -gt $atlasn ]] && chfactor=$atlasn
	jobn=$[$atlasn / $chfactor + 1]
	[[ -n "$PINCRAM_QUEUE" ]] && qu="-q $PINCRAM_QUEUE"
	pbsjob=$(qsub -V -J 1-$jobn -l walltime=$tsec "$PINCRAM_PBS_OPTION" -j oe -N reg${level}n$chunkn $qu $script)
	msg JobID: $pbsjob
	;;
    bash)
	[[ $jobs == "100%" ]] && jobs=$(nproc --all)
	cat $datalist | parallel -j $jobs $script
	;;
    *)
	fatal "$arch not implemented"
esac

exit 0
