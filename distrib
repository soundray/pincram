#!/bin/bash

cdir=$(dirname "$0")
. "$cdir"/common
. "$cdir"/functions
cdir=$(normalpath "$cdir")
export cdir

pn=$0
prog=$(basename "$pn")
comline="$cdir/$prog $*"

# parameters
datalist=
ijobs="100%"
mem=7900
while [ $# -gt 0 ]
do
    case "$1" in
	-script)            script="$2"; shift;;
	-datalist)        datalist="$2"; shift;;
	-jobs)               ijobs="$2"; shift;;
	-level)             ilevel="$2"; shift;;
    --) shift; break;;
    -*)
        echo >&2 \
	         "Usage: $0 -script script.sh -datalist list.sh -jobs max-parallel -level level"
    exit 1;;
*)  break;;# terminate while loop
    esac
    shift
done

jobs=$ijobs
[[ $jobs =~ ^[0-9]+%?$ ]] || fatal "Non-numeric setting for -jobs"

[[ -n "$PINCRAM_ARCH" ]] && arch="$PINCRAM_ARCH"
[[ $arch =~ pbs|bash|ge ]] || fatal "Architecture not set or not implemented (\$arch=$arch)"

level=$ilevel
[[ $level =~ ^[0-9]+%?$ ]] || fatal "Non-numeric setting for -level. level = $level ilevel = $ilevel"

[[ -e $datalist ]] || fatal "Data list $datalist not found"
datalist=$(normalpath $datalist)


export LEVEL=$level 
case $arch in
    ge)
	fatal "$arch not implemented"
	;;
    pbs)
	cd "$PINCRAM_WORKDIR"
	atlasn=$(cat $datalist | wc -l)
	if [[ -n $PINCRAM_CHUNKSIZE ]] 
	then
	    chunkn=$PINCRAM_CHUNKSIZE
	else
	    chunkn=$[$[$level-3]**2]
	fi
	levelplus=$[$level + 3]
	tsec=$[$levelplus ** 5 * $chunkn]
	csec=$[$levelplus ** 4 * $chunkn]
	chfactor=$chunkn ; [[ $chunkn -gt $atlasn ]] && chfactor=$atlasn
	jobn=$[$atlasn / $chfactor + 1]
	[[ -n "$PINCRAM_QUEUE" ]] && qu="-q $PINCRAM_QUEUE"

	job_state=nosuch
	set -- $(ls distrib-$level-* 2>/dev/null)
	[[ -n $1 ]] && eval $(qstat -f $(echo $1 | cut -d '-' -f 3) | grep job_state | tr -d '[:blank:]')
	case $job_state in
	    B|Q)
		echo "Job state is $job_state -- continue waiting" >&2
		;;
	    nosuch)
		[[ -n $1 ]] && rm distrib-$level-*
		jparam= ; [[ $chunkn -lt $atlasn ]] && jparam="-J 1-$jobn"
		pbsjob=$(qsub -V $jparam -l walltime=$tsec "$PINCRAM_PBS_OPTION" -j oe -N reg${level}n$chunkn $qu $script)
		touch distrib-$level-$pbsjob
		echo "Job submitted" >&2
		;;
	    *)
		fatal "PBS error"
		;;
	esac
	msg "Estimated processing time $csec seconds"
	echo $csec
	;;
    bash)
	atlasn=$(cat $datalist | wc -l)
	levelplus=$[$level + 3]
	[[ $jobs == "100%" ]] && jobs=$(nproc --all)
	chunkn=$[ $atlasn / $jobs ]
	[[ $chunkn -eq 0 ]] && chunkn=1
	csec=$[$levelplus ** 4 * $chunkn]
	cat $datalist | parallel --no-notice -j $jobs $script &
	msg "Estimated processing time $csec seconds"
	echo $csec
	;;
    *)
	fatal "$arch not implemented"
esac

exit 0
