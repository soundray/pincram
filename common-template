#!/bin/bash

#####
# Parallelization architecture / middleware
#####

# PINCRAM_ARCH=bash
# PINCRAM_ARCH=ge
PINCRAM_ARCH=pbs
export PINCRAM_ARCH
# export PINCRAM_QUEUE=myqueue ## Gets added to qsub call with -q option
# export PINCRAM_CHUNKSIZE=1 ## Number of registrations per array subjob

# export PINCRAM_USE_MIRTK=1 ## Port to MIRTK not usable yet

# export $PINCRAM_PBS_OPTION="-l place=free:shared" ## Per-system options

#####
# For new installation: adapt paths to dependencies
#####

PATH=/***PATH/TO***/niftyreg/bin:$PATH

PATH=/***PATH/TO***/niftyseg/bin:$PATH

slicer_modules=Slicer-4.6.2-linux-amd64/lib/Slicer-4.6/cli-modules
PATH=/**PATH/TO***/slicer/$slicer_modules:$PATH

LD_LIBRARY_PATH=/***PATH/TO/slicer/$slicer_modules:/***PATH/TO***/slicer/$slicer_modules/..:$LD_LIBRARY_PATH


### FSL -- own installation (no package)
FSLDIR=/***PATH/TO***/fsl/build/fsl
. $FSLDIR/etc/fslconf/fsl.sh
PATH=$FSLDIR/bin:$PATH
export FSLDIR 

### FSL -- installation from .deb package
#. /etc/fsl/fsl.sh

export PATH LD_LIBRARY_PATH


#####
# Functions etc. -- no adjustments normally necessary below this line
#####

msg () {
    for msgline
    do echo "$pn: $msgline" >&2
    done
}

fatal () { msg "$@" ; exit 1 ; }

tempdir () {
    : ${TMPDIR:="/tmp"}
    tdbase=$TMPDIR/$USER
    test -e $tdbase || mkdir -p $tdbase
    td=$(mktemp -d $tdbase/$(basename $0).XXXXXX) || fatal "Could not create temp dir in $tdbase"
    echo "$td"
}

normalpath () {
    local s="$1"
    [[ ${#s} -lt 800 ]] || fatal "Option path too long"
    [[ "$s" =~ ^[[:print:]]*$ ]] || fatal "Non-printables in path"
    dir=$(dirname -- "$1")
    bas=$(basename -- "$1")
    echo $(cd $dir && pwd)/$bas
}

finish () {
    [[ $savewd -eq 1 ]] || rm -rf "$td"
    exit
}

set -e   # Terminate script at first error


